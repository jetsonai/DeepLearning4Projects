cd ~/DeepLearning4Projects/Chap8_5

다음의 스크립트를 실행하고

wget https://raw.githubusercontent.com/jetsonai/DeepLearning4Projects/main/AdditionTest/prepare_env_in_jetson.sh

1. 홈 경로의 tensorrtx/yolov5 폴더에서 build 폴더를 생성한 후 yolov5s_voc.wts 파일을 build
폴더 아래로 이동합니다.

cd ~/tensorrtx/yolov5

mkdir build && cd build 

2. ~/tensorrtx/yolov5/src/config.h의 설정을 훈련한 모델과 추론 설정에 맞게 수정합니다.
⋯
constexpr static int kNumClass = 20;
⋯
constexpr static int kInputH = 480;
constexpr static int kInputW = 480;

3. 빌드를 수행합니다.
   
cmake ..

make


sudo docker run --privileged --name DOCKER_ULTRA_NANO -e DISPLAY=unix$DISPLAY -e=QT_X11_NO_MITSHM=1 --ipc=host -it -d --net=host -v /dev/snd:/dev/snd --volume=/docker_job:/docker_job --volume=/home/nvidia:/mnt --volume=/tmp/.X11-unix:/tmp/.X11-unix -v /dev/shm:/dev/shm -v /var/run/avahi-daemon/socket:/var/run/avahi-daemon/socket -v /tmp/argus_socket:/tmp/argus_socket -v /dev/:/dev/ --runtime=nvidia ultralytics/ultralytics:8.3.23-jetson-jetpack4

docker pull ultralytics/ultralytics:8.3.23-jetson-jetpack4

alias DOCKER_ULTRA_NANO_RESTART="sudo docker restart DOCKER_ULTRA_NANO"
alias DOCKER_ULTRA_NANO_ATTACH="sudo xhost +local: &&  sudo docker exec -i -t  DOCKER_NGC_PYTORCH_MNT /bin/bash"
